name: Test Azure OpenAI Responses API

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  test-responses-api:
    runs-on: ubuntu-latest
    environment: responses  # Use the 'responses' environment for secrets
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test Azure OpenAI Responses API
      env:
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_V1_API_ENDPOINT: ${{ secrets.AZURE_OPENAI_V1_API_ENDPOINT }}
        AZURE_OPENAI_API_MODEL: ${{ secrets.AZURE_OPENAI_API_MODEL }}
      run: |
        echo "Testing responses-basic-aoai-v1.py script..."
        
        # Run the script and capture output
        python responses-basic-aoai-v1.py > output.txt 2>&1
        exit_code=$?
        
        # Check if script executed successfully
        if [ $exit_code -eq 0 ]; then
          echo "‚úÖ Script executed successfully"
        else
          echo "‚ùå Script failed with exit code: $exit_code"
          echo "Error output:"
          cat output.txt
          exit 1
        fi
        
        # Check if output was generated
        if [ -s output.txt ]; then
          echo "‚úÖ Script produced output:"
          cat output.txt
          
          # Basic validation that output is not empty and doesn't contain common error patterns
          if grep -qi "error\|exception\|traceback\|failed" output.txt; then
            echo "‚ùå Output contains error indicators"
            exit 1
          else
            echo "‚úÖ Output appears to be valid (no error indicators found)"
          fi
        else
          echo "‚ùå Script produced no output"
          exit 1
        fi
        
        echo "üéâ Test completed successfully!"